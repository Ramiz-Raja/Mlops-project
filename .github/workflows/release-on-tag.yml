name: Release on Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g. v1.0.0)'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine release tag
        id: tag
        run: |
          if [ -n "${{ github.ref_name }}" ]; then
            echo "RELEASE_TAG=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.backend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-backend:${{ steps.tag.outputs.RELEASE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-backend:${{ github.sha }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-frontend:${{ steps.tag.outputs.RELEASE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-frontend:${{ github.sha }}

      - name: Pull images and get digests
        id: digests
        run: |
          set -e
          REPO_BACK=${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-backend
          REPO_FRONT=${{ secrets.DOCKERHUB_USERNAME }}/mlopsproject-frontend
          TAG=${{ steps.tag.outputs.RELEASE_TAG }}

          echo "Pulling $REPO_BACK:$TAG"
          docker pull $REPO_BACK:$TAG
          DBG=$(docker inspect --format='{{index .RepoDigests 0}}' $REPO_BACK:$TAG || true)
          echo "backend_digest=$DBG" >> $GITHUB_OUTPUT

          echo "Pulling $REPO_FRONT:$TAG"
          docker pull $REPO_FRONT:$TAG
          DFG=$(docker inspect --format='{{index .RepoDigests 0}}' $REPO_FRONT:$TAG || true)
          echo "frontend_digest=$DFG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.RELEASE_TAG }}
          release_name: Release ${{ steps.tag.outputs.RELEASE_TAG }}
          body: |
            Release: ${{ steps.tag.outputs.RELEASE_TAG }}
            Commit: ${{ github.sha }}
            
            Backend image: ${{ steps.digests.outputs.backend_digest }}
            Frontend image: ${{ steps.digests.outputs.frontend_digest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find model artifact
        id: find_model
        run: |
          set -e
          if [ -f model.joblib ]; then
            echo "found=true" >> $GITHUB_OUTPUT
            echo "path=model.joblib" >> $GITHUB_OUTPUT
          elif ls tmp_model/*.joblib 1> /dev/null 2>&1; then
            FIRST=$(ls tmp_model/*.joblib | head -n1)
            echo "found=true" >> $GITHUB_OUTPUT
            echo "path=$FIRST" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload model to release (if present)
        if: ${{ steps.find_model.outputs.found == 'true' }}
        uses: softprops/action-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_model.outputs.path }}
          asset_name: ${{ steps.find_model.outputs.path }}
          asset_content_type: application/octet-stream
